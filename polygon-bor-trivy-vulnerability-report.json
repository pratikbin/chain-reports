{
  "SchemaVersion": 2,
  "ArtifactName": "polygon-bor_v0.4.0",
  "ArtifactType": "container_image",
  "Metadata": {
    "ImageID": "sha256:128d22f1f2d02775f7a64219d9b8d05223976923b09840bca0972eedc9a7d6de",
    "DiffIDs": [
      "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2023-06-27T09:56:51.819852153Z",
      "history": [
        {
          "created": "2023-06-27T09:56:51.819852153Z",
          "created_by": "COPY /bin/bor /bin/bor # buildkit",
          "comment": "buildkit.dockerfile.v0"
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
        ]
      },
      "config": {
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ],
        "WorkingDir": "/"
      }
    }
  },
  "Results": [
    {
      "Target": "bin/bor",
      "Class": "lang-pkgs",
      "Type": "gobinary",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2020-8911",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.29.15",
          "Layer": {
            "Digest": "sha256:2f9af9c89a69885087d8f9104d938cbf95ea7d2c0bc44dc02cdcf3a15367dada",
            "DiffID": "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8911",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws/aws-sdk-go: CBC padding oracle issue in AWS S3 Crypto SDK for golang",
          "Description": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 5.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8911",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869800",
            "https://github.com/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8911",
            "https://pkg.go.dev/vuln/GO-2022-0646",
            "https://www.cve.org/CVERecord?id=CVE-2020-8911"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-18T13:37:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-2582",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.29.15",
          "FixedVersion": "1.34.0",
          "Layer": {
            "Digest": "sha256:2f9af9c89a69885087d8f9104d938cbf95ea7d2c0bc44dc02cdcf3a15367dada",
            "DiffID": "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-2582",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "The AWS S3 Crypto SDK sends an unencrypted hash of the plaintext along ...",
          "Description": "The AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext, if the hash is readable to the attacker. AWS now blocks this metadata field, but older SDK versions still send it.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-326"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 4.3
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 4.3
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-6jvc-q2x7-pchv",
            "https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-2582",
            "https://pkg.go.dev/vuln/GO-2022-0391"
          ],
          "PublishedDate": "2022-12-27T22:15:00Z",
          "LastModifiedDate": "2023-01-05T04:43:00Z"
        },
        {
          "VulnerabilityID": "GHSA-76wf-9vgp-pj7w",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.29.15",
          "FixedVersion": "1.34.0",
          "Layer": {
            "Digest": "sha256:2f9af9c89a69885087d8f9104d938cbf95ea7d2c0bc44dc02cdcf3a15367dada",
            "DiffID": "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-76wf-9vgp-pj7w",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "Unencrypted md5 plaintext hash in metadata in AWS S3 Crypto SDK for golang",
          "Description": "### Summary\n\nThe golang AWS S3 Crypto SDK was impacted by an issue that can result in loss of confidentiality. An attacker with read access to an encrypted S3 bucket was able to recover the plaintext without accessing the encryption key.\n\n### Risk/Severity\n\nThe vulnerability poses insider risks/privilege escalation risks, circumventing KMS controls for stored data.\n\n### Impact\n\nThe issue has been fully mitigated by AWS as of Aug. 5th by disallowing the header in question.\n\nThe S3 crypto library tries to store an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext in an offline attack, if the hash is readable to the attacker. In order to be impacted by this issue, the attacker has to be able to guess the plaintext as a whole. The attack is theoretically valid if the plaintext entropy is below the key size, i.e. if it is easier to brute force the plaintext instead of the key itself, but practically feasible only for short plaintexts or plaintexts otherwise accessible to the attacker in order to create a rainbow table.\n\nThe issue has been fixed server-side by AWS as of Aug 5th, by blocking the related metadata field. No S3 objects are affected anymore.\n\n### Mitigation\n\nThe header in question is no longer served by AWS, making this attack fully mitigated as of Aug. 5th.\n\n### Proof of concept\n\nA [Proof of concept](https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc) is available in a separate github repository, this particular issue can be found at [here](https://github.com/sophieschmieg/exploits/blob/master/aws_s3_crypto_poc/exploit/hash_exploit.go):\n\n```golang\nfunc HashExploit(bucket string, key string, input *OfflineAttackInput) (string, error) {\n\t_, header, err := input.S3Mock.GetObjectDirect(bucket, key)\n\tlength, err := strconv.Atoi(header.Get(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Length\"))\n\tplaintextMd5 := header.Get(\"X-Amz-Meta-X-Amz-Unencrypted-Content-Md5\")\n\tblocks := length / 16\n\tpossiblePlaintextNum := 1\n\tsegNum := len(input.PossiblePlaintextSegments)\n\tfor i := 0; i \u003c blocks; i++ {\n\t\tpossiblePlaintextNum *= segNum\n\t}\n\tfor i := 0; i \u003c possiblePlaintextNum; i++ {\n\t\tw := i\n\t\tguess := \"\"\n\t\tfor j := 0; j \u003c blocks; j++ {\n\t\t\tguess += input.PossiblePlaintextSegments[w%segNum]\n\t\t\tw /= segNum\n\t\t}\n\t\tguessMd5 := md5.Sum([]byte(guess))\n\t\tif plaintextMd5 == base64.StdEncoding.EncodeToString(guessMd5[:]) {\n\t\t\treturn guess, nil\n\t\t}\n\t}\n\treturn \"\", fmt.Errorf(\"No plaintext found!\")\n}\n```\n\nThe PoC will only work on old versions of the library, as the hash has been removed from being calculated as well.",
          "Severity": "MEDIUM",
          "References": [
            "https://github.com/advisories/GHSA-76wf-9vgp-pj7w",
            "https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1",
            "https://github.com/google/security-research/security/advisories/GHSA-76wf-9vgp-pj7w",
            "https://pkg.go.dev/vuln/GO-2022-0391"
          ]
        },
        {
          "VulnerabilityID": "CVE-2020-8912",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.29.15",
          "Layer": {
            "Digest": "sha256:2f9af9c89a69885087d8f9104d938cbf95ea7d2c0bc44dc02cdcf3a15367dada",
            "DiffID": "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8912",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws-sdk-go: In-band key negotiation issue in AWS S3 Crypto SDK for golang",
          "Description": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 2.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8912",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869801",
            "https://github.com/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8912",
            "https://pkg.go.dev/vuln/GO-2022-0646",
            "https://www.cve.org/CVERecord?id=CVE-2020-8912"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-17T19:31:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-44797",
          "PkgName": "github.com/btcsuite/btcd",
          "InstalledVersion": "v0.22.0-beta",
          "FixedVersion": "0.23.2",
          "Layer": {
            "Digest": "sha256:2f9af9c89a69885087d8f9104d938cbf95ea7d2c0bc44dc02cdcf3a15367dada",
            "DiffID": "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-44797",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "btcd mishandles witness size checking",
          "Description": "btcd before 0.23.2, as used in Lightning Labs lnd before 0.15.2-beta and other Bitcoin-related products, mishandles witness size checking.",
          "Severity": "CRITICAL",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-2chg-86hq-7w38",
            "https://github.com/btcsuite/btcd/pull/1896",
            "https://github.com/btcsuite/btcd/pull/1896/commits/f523d4ccaa5f34a2f761f16a05f5d6e6665b1168",
            "https://github.com/btcsuite/btcd/releases/tag/v0.23.2",
            "https://github.com/lightningnetwork/lnd/issues/7002",
            "https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-44797",
            "https://pkg.go.dev/vuln/GO-2022-1098"
          ],
          "PublishedDate": "2022-11-07T04:15:00Z",
          "LastModifiedDate": "2022-11-14T18:25:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-20329",
          "PkgName": "go.mongodb.org/mongo-driver",
          "InstalledVersion": "v1.3.0",
          "FixedVersion": "1.5.1",
          "Layer": {
            "Digest": "sha256:2f9af9c89a69885087d8f9104d938cbf95ea7d2c0bc44dc02cdcf3a15367dada",
            "DiffID": "sha256:3c41c4d759be14603e9fde6991cd556f0cf92972079070bb0691d7139c06af6a"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-20329",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "specific cstrings input may not be properly validated",
          "Description": "Specific cstrings input may not be properly validated in the MongoDB Go Driver when marshalling Go objects into BSON. A malicious user could use a Go object with specific string to potentially inject additional fields into marshalled documents. This issue affects all MongoDB GO Drivers up to (and including) 1.5.0.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-20"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 6.8
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
              "V2Score": 4,
              "V3Score": 6.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
              "V3Score": 6.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-20329",
            "https://github.com/advisories/GHSA-f6mq-5m25-4r72",
            "https://github.com/mongodb/mongo-go-driver/commit/2aca31d5986a9e1c65a92264736de9fdc3b9b4ca",
            "https://github.com/mongodb/mongo-go-driver/pull/622",
            "https://github.com/mongodb/mongo-go-driver/releases/tag/v1.5.1",
            "https://jira.mongodb.org/browse/GODRIVER-1923",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-20329",
            "https://www.cve.org/CVERecord?id=CVE-2021-20329"
          ],
          "PublishedDate": "2021-06-10T17:15:00Z",
          "LastModifiedDate": "2022-07-08T18:54:00Z"
        }
      ]
    }
  ]
}
