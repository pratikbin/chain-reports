{
  "SchemaVersion": 2,
  "ArtifactName": "bostrom_v0.3.2",
  "ArtifactType": "container_image",
  "Metadata": {
    "ImageID": "sha256:60f3936f7b3d70ee54553867f766ae1097407d54318240eadd48aa0a39ecdae0",
    "DiffIDs": [
      "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2023-06-19T19:17:22.312613665Z",
      "history": [
        {
          "created": "2023-06-19T19:17:22.312613665Z",
          "created_by": "COPY /bin/cyber /bin/cyber # buildkit",
          "comment": "buildkit.dockerfile.v0"
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
        ]
      },
      "config": {
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ],
        "WorkingDir": "/"
      }
    }
  },
  "Results": [
    {
      "Target": "bin/cyber",
      "Class": "lang-pkgs",
      "Type": "gobinary",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2022-44797",
          "PkgName": "github.com/btcsuite/btcd",
          "InstalledVersion": "v0.22.0-beta",
          "FixedVersion": "0.23.2",
          "Layer": {
            "Digest": "sha256:c94a23065ff4148166528895b8b3894100fbc9d59ccea9ae14b1c6efe5050df1",
            "DiffID": "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-44797",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "btcd mishandles witness size checking",
          "Description": "btcd before 0.23.2, as used in Lightning Labs lnd before 0.15.2-beta and other Bitcoin-related products, mishandles witness size checking.",
          "Severity": "CRITICAL",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-2chg-86hq-7w38",
            "https://github.com/btcsuite/btcd/pull/1896",
            "https://github.com/btcsuite/btcd/pull/1896/commits/f523d4ccaa5f34a2f761f16a05f5d6e6665b1168",
            "https://github.com/btcsuite/btcd/releases/tag/v0.23.2",
            "https://github.com/lightningnetwork/lnd/issues/7002",
            "https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-44797",
            "https://pkg.go.dev/vuln/GO-2022-1098"
          ],
          "PublishedDate": "2022-11-07T04:15:00Z",
          "LastModifiedDate": "2022-11-14T18:25:00Z"
        },
        {
          "VulnerabilityID": "GHSA-qfc5-6r3j-jj22",
          "PkgName": "github.com/cosmos/cosmos-sdk",
          "InstalledVersion": "v0.45.5",
          "Layer": {
            "Digest": "sha256:c94a23065ff4148166528895b8b3894100fbc9d59ccea9ae14b1c6efe5050df1",
            "DiffID": "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-qfc5-6r3j-jj22",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "Go package github.com/cosmos/cosmos-sdk module x/crisis does NOT cause chain halt",
          "Description": "# x/crisis does NOT cause chain halt\n\n### Impact\nIf an invariant check fails on a Cosmos SDK network and a transaction is sent to the `x/crisis` module to halt the chain, the chain does not halt. All versions of the `x/crisis` module is affected on all versions of the Cosmos SDK.\n\n### Details\nThe `x/crisis` module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a `MsgVerifyInvariant` with the name of the invariant. Processing this message is supposed to cause the nodes to panic. However, because the panic is within a transaction, it is caught by the SDK’s built-in panic-recovery machinery and just treated as a normal “invalid” transaction (ie. it returns a non-zero abci Code). Thus the `x/crisis` transactions don’t actually cause chains to halt. If there is an invariant violation, it can be confirmed with an `x/crisis` transaction, but it won’t cause any nodes to halt, they will just continue processing blocks.\n\nThat said, any node running with `start --inv-check-period X` will actually panic when it runs the periodic check (though it will still not panic just by processing an `x/crisis` transaction). Since this panic is located in EndBlock, it is not caught by the panic-recovery machinery and does actually crash the node. Presumably few if any nodes actually run with this in production because of how long the invariant checks take, and this runs all of them every `X` blocks.\n\n### Patches\nNo patches will be released.\n\nThe `x/crisis` module was originally intended to allow chains to halt rather than continue with some unknown behaviour in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential [cost of halting increases](https://github.com/osmosis-labs/osmosis/issues/570), chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks, but may not be worth halting for.\n\nIn some cases, chains have already broken the invariant calculations but have dealt with the consequences off-chain or during development. Halting these chains would be counter-productive.\n\nThe SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.\n\nHence, the decision was made that the `x/crisis` module will not be patched for chain halts. The module will be deprecated when new modules take over its responsibilities.\n\n### Workarounds\nIn case of a valid invariant check failure that requires a chain halt, the network validators are encouraged to coordinate off-chain for network halts. This has been an already established process for security patches.\n\n### References\nSDK developer epic about invariant checking: https://github.com/cosmos/cosmos-sdk/issues/15706\nPublic report: https://github.com/cosmos/cosmos-sdk/issues/15325",
          "Severity": "LOW",
          "References": [
            "https://github.com/advisories/GHSA-qfc5-6r3j-jj22",
            "https://github.com/cosmos/cosmos-sdk/issues/15325",
            "https://github.com/cosmos/cosmos-sdk/issues/15706",
            "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-qfc5-6r3j-jj22"
          ]
        },
        {
          "VulnerabilityID": "GHSA-w5w5-2882-47pc",
          "PkgName": "github.com/cosmos/cosmos-sdk",
          "InstalledVersion": "v0.45.5",
          "Layer": {
            "Digest": "sha256:c94a23065ff4148166528895b8b3894100fbc9d59ccea9ae14b1c6efe5050df1",
            "DiffID": "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-w5w5-2882-47pc",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "github.com/cosmos/cosmos-sdk's x/crisis does not charge ConstantFee",
          "Description": "# x/crisis does not charge ConstantFee\n### Impact\nIf a transaction is sent to the `x/crisis` module to check an invariant, the ConstantFee parameter of the chain is NOT charged. All versions of the `x/crisis` module are affected on all versions of the Cosmos SDK.\n\n### Details\nThe `x/crisis` module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a `MsgVerifyInvariant` with the name of the invariant. Processing this message takes extra processing power hence a `ConstantFee` was introduced on the chain that is charged as extra from the reporter for the extra computational work. This is supposed to avert spammers on the chain making nodes do extra computations using this transaction. By not charging the `ConstantFee`, the transactions related to invariant checking are relatively cheaper compared to the computational need and other transactions.\n\nThat said, the submitter still has to pay the transaction fee to put the transaction on the network, hence using this weakness for spamming is limited by the usual mechanisms.\n\nSynthetic testing showed up to a 20% increase in CPU usage on a validator node that is spammed by hundreds of `MsgVerifyInvariant` messages which still makes this an expensive operation to carry out on a live blockchain network.\n\n### Patches\nThe `ConstantFee` charge of the `x/crisis` module will either be fixed or disabled in an upcoming regular release of the Cosmos SDK.\n\nThe `x/crisis` module was originally intended to allow chains to halt rather than continue with some unknown behavior in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential [cost of halting increases](https://github.com/osmosis-labs/osmosis/issues/570), chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks.\n\nThe SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.\n\nHence, the decision was made that the `x/crisis` module will be deprecated when new modules take over its responsibilities.\n\n### Workarounds\nThere is no workaround posted. Validators are advised to leave some extra computing room on their servers for possible spamming scenarios. (This is a good measure in any case.)\n\n### References\nSDK developer epic about invariant checking: https://github.com/cosmos/cosmos-sdk/issues/15706\n",
          "Severity": "LOW",
          "References": [
            "https://github.com/advisories/GHSA-w5w5-2882-47pc",
            "https://github.com/cosmos/cosmos-sdk/issues/15706",
            "https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-w5w5-2882-47pc"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-27664",
          "PkgName": "golang.org/x/net",
          "InstalledVersion": "v0.0.0-20220412020605-290c469a71a5",
          "FixedVersion": "0.0.0-20220906165146-f3363e06e74c",
          "Layer": {
            "Digest": "sha256:c94a23065ff4148166528895b8b3894100fbc9d59ccea9ae14b1c6efe5050df1",
            "DiffID": "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-27664",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "handle server errors after sending GOAWAY",
          "Description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
          "Severity": "HIGH",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 6.5
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2023:2357",
            "https://access.redhat.com/security/cve/CVE-2022-27664",
            "https://bugzilla.redhat.com/2107371",
            "https://bugzilla.redhat.com/2107374",
            "https://bugzilla.redhat.com/2107383",
            "https://bugzilla.redhat.com/2107386",
            "https://bugzilla.redhat.com/2107388",
            "https://bugzilla.redhat.com/2113814",
            "https://bugzilla.redhat.com/2124669",
            "https://bugzilla.redhat.com/2132868",
            "https://bugzilla.redhat.com/2132872",
            "https://bugzilla.redhat.com/2161274",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1913333",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1913338",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2107371",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2107374",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2107383",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2107386",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2107388",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2113814",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2124669",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28851",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28852",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1705",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-27664",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30630",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30632",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30635",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32148",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32189",
            "https://errata.almalinux.org/9/ALSA-2023-2357.html",
            "https://errata.rockylinux.org/RLSA-2022:7129",
            "https://github.com/advisories/GHSA-69cg-p879-7622",
            "https://github.com/golang/go/commit/5bc9106458fc07851ac324a4157132a91b1f3479 (go1.18.6)",
            "https://github.com/golang/go/commit/9cfe4e258b1c9d4a04a42539c21c7bdb2e227824 (go1.19.1)",
            "https://github.com/golang/go/issues/54658",
            "https://go.dev/cl/428735",
            "https://go.dev/issue/54658",
            "https://groups.google.com/g/golang-announce",
            "https://groups.google.com/g/golang-announce/c/x49AQzIVX-s",
            "https://groups.google.com/g/golang-announce/c/x49AQzIVX-s/m/0tgO0pjiBQAJ",
            "https://linux.oracle.com/cve/CVE-2022-27664.html",
            "https://linux.oracle.com/errata/ELSA-2023-2802.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JXKTHIGE5F576MAPFYCIJXNRGBSPISUF/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TXS2OQ57KZC5XZKK5UW4SYKPVQAHIOJX/",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-27664",
            "https://pkg.go.dev/vuln/GO-2022-0969",
            "https://security.gentoo.org/glsa/202209-26",
            "https://security.netapp.com/advisory/ntap-20220923-0004/",
            "https://ubuntu.com/security/notices/USN-6038-1",
            "https://www.cve.org/CVERecord?id=CVE-2022-27664"
          ],
          "PublishedDate": "2022-09-06T18:15:00Z",
          "LastModifiedDate": "2022-10-28T12:42:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-41723",
          "PkgName": "golang.org/x/net",
          "InstalledVersion": "v0.0.0-20220412020605-290c469a71a5",
          "FixedVersion": "0.7.0",
          "Layer": {
            "Digest": "sha256:c94a23065ff4148166528895b8b3894100fbc9d59ccea9ae14b1c6efe5050df1",
            "DiffID": "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-41723",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "avoid quadratic complexity in HPACK decoding",
          "Description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-400"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-41723",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41723",
            "https://github.com/advisories/GHSA-vvpx-j8f3-3w6h",
            "https://go.dev/cl/468135",
            "https://go.dev/cl/468295",
            "https://go.dev/issue/57855",
            "https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4MA5XS5DAOJ5PKKNG5TUXKPQOFHT5VBC/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RGW7GE2Z32ZT47UFAQFDRQE33B7Q7LMT/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RLBQ3A7ROLEQXQLXFDLNJ7MYPKG5GULE/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XX3IMUTZKRQ73PBZM4E2JP4BKYH4C6XE/",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-41723",
            "https://pkg.go.dev/vuln/GO-2023-1571",
            "https://vuln.go.dev/ID/GO-2023-1571.json",
            "https://www.cve.org/CVERecord?id=CVE-2022-41723"
          ],
          "PublishedDate": "2023-02-28T18:15:00Z",
          "LastModifiedDate": "2023-05-16T10:50:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-41717",
          "PkgName": "golang.org/x/net",
          "InstalledVersion": "v0.0.0-20220412020605-290c469a71a5",
          "FixedVersion": "0.4.0",
          "Layer": {
            "Digest": "sha256:c94a23065ff4148166528895b8b3894100fbc9d59ccea9ae14b1c6efe5050df1",
            "DiffID": "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-41717",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "excessive memory growth in a Go server accepting HTTP/2 requests",
          "Description": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-770"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2023:2367",
            "https://access.redhat.com/security/cve/CVE-2022-41717",
            "https://bugzilla.redhat.com/2092793",
            "https://bugzilla.redhat.com/2161274",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41717",
            "https://errata.almalinux.org/9/ALSA-2023-2367.html",
            "https://github.com/advisories/GHSA-xrjj-mj9h-534m",
            "https://github.com/golang/go/commit/618120c165669c00a1606505defea6ca755cdc27 (go1.19.4)",
            "https://github.com/golang/go/commit/76cad4edc29d28432a7a0aa27e87385d3d7db7a1 (go1.18.9)",
            "https://go.dev/cl/455635",
            "https://go.dev/cl/455717",
            "https://go.dev/issue/56350",
            "https://groups.google.com/g/golang-announce/c/L_3rmdT0BMU",
            "https://groups.google.com/g/golang-announce/c/L_3rmdT0BMU/m/yZDrXjIiBQAJ",
            "https://linux.oracle.com/cve/CVE-2022-41717.html",
            "https://linux.oracle.com/errata/ELSA-2023-2866.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QBKBAZBIOXZV5QCFHZNSVXULR32XJCYD/",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-41717",
            "https://pkg.go.dev/vuln/GO-2022-1144",
            "https://ubuntu.com/security/notices/USN-6038-1",
            "https://www.cve.org/CVERecord?id=CVE-2022-41717"
          ],
          "PublishedDate": "2022-12-08T20:15:00Z",
          "LastModifiedDate": "2023-07-04T03:15:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-32149",
          "PkgName": "golang.org/x/text",
          "InstalledVersion": "v0.3.7",
          "FixedVersion": "0.3.8",
          "Layer": {
            "Digest": "sha256:c94a23065ff4148166528895b8b3894100fbc9d59ccea9ae14b1c6efe5050df1",
            "DiffID": "sha256:b108e29f7b4729abd0a168e10b4e4247eef2d65a938b360def2412469f905e8c"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-32149",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "ParseAcceptLanguage takes a long time to parse complex tags",
          "Description": "An attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-772"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-32149",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32149",
            "https://github.com/advisories/GHSA-69ch-w2m2-3vjp",
            "https://github.com/golang/go/issues/56152",
            "https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c",
            "https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c (v0.3.8)",
            "https://go.dev/cl/442235",
            "https://go.dev/issue/56152",
            "https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ",
            "https://groups.google.com/g/golang-dev/c/qfPIly0X7aU",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-32149",
            "https://pkg.go.dev/vuln/GO-2022-1059",
            "https://ubuntu.com/security/notices/USN-5873-1",
            "https://www.cve.org/CVERecord?id=CVE-2022-32149"
          ],
          "PublishedDate": "2022-10-14T15:15:00Z",
          "LastModifiedDate": "2022-10-18T17:41:00Z"
        }
      ]
    }
  ]
}
