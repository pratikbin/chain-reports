{
  "SchemaVersion": 2,
  "ArtifactName": "cryptoorgchain_v4.2.5",
  "ArtifactType": "container_image",
  "Metadata": {
    "ImageID": "sha256:b5bb6ab9c8bfb428ecd39f13cf89b7447b5b88d9d14b7a486af7ac720943ff74",
    "DiffIDs": [
      "sha256:39253abf6c519166451d85be2b382550c2e733ca9bab5c0aca4406099d2bb97e"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2023-06-19T19:01:52.300464249Z",
      "history": [
        {
          "created": "2023-06-19T19:01:52.300464249Z",
          "created_by": "COPY /bin/chain-maind /bin/chain-maind # buildkit",
          "comment": "buildkit.dockerfile.v0"
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:39253abf6c519166451d85be2b382550c2e733ca9bab5c0aca4406099d2bb97e"
        ]
      },
      "config": {
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ],
        "WorkingDir": "/"
      }
    }
  },
  "Results": [
    {
      "Target": "bin/chain-maind",
      "Class": "lang-pkgs",
      "Type": "gobinary",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2020-8911",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.44.122",
          "Layer": {
            "Digest": "sha256:8ffa7bfdefcc45e292a39e7bcb321023e015a448801a09a53360b8bb7a2df612",
            "DiffID": "sha256:39253abf6c519166451d85be2b382550c2e733ca9bab5c0aca4406099d2bb97e"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8911",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws/aws-sdk-go: CBC padding oracle issue in AWS S3 Crypto SDK for golang",
          "Description": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 5.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8911",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869800",
            "https://github.com/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8911",
            "https://pkg.go.dev/vuln/GO-2022-0646",
            "https://www.cve.org/CVERecord?id=CVE-2020-8911"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-18T13:37:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-8912",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.44.122",
          "Layer": {
            "Digest": "sha256:8ffa7bfdefcc45e292a39e7bcb321023e015a448801a09a53360b8bb7a2df612",
            "DiffID": "sha256:39253abf6c519166451d85be2b382550c2e733ca9bab5c0aca4406099d2bb97e"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8912",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws-sdk-go: In-band key negotiation issue in AWS S3 Crypto SDK for golang",
          "Description": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 2.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8912",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869801",
            "https://github.com/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8912",
            "https://pkg.go.dev/vuln/GO-2022-0646",
            "https://www.cve.org/CVERecord?id=CVE-2020-8912"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-17T19:31:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-34451",
          "PkgName": "github.com/cometbft/cometbft",
          "InstalledVersion": "v0.34.27",
          "FixedVersion": "0.37.2, 0.34.29",
          "Layer": {
            "Digest": "sha256:8ffa7bfdefcc45e292a39e7bcb321023e015a448801a09a53360b8bb7a2df612",
            "DiffID": "sha256:39253abf6c519166451d85be2b382550c2e733ca9bab5c0aca4406099d2bb97e"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-34451",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "CometBFT may duplicate transactions in the mempool's data structures",
          "Description": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. The mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. In `v0.37.0`, and `v0.37.1`, as well as in `v0.34.28`, and all previous releases of the CometBFT repo2, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction. Because the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list. This happens even if the duplicated transaction is later committed in a block. The only way to remove the transaction is by restarting the node.\n\nThe above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node. The problem is fixed in releases `v0.34.29` and `v0.37.2`. Some workarounds are available. Increasing the value of `cache_size` in `config.toml` makes it very difficult to effectively attack a full node. Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-401"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H",
              "V3Score": 8.2
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H",
              "V3Score": 8.2
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-w24w-wp77-qffm",
            "https://github.com/cometbft/cometbft/pull/890",
            "https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm",
            "https://github.com/tendermint/tendermint/pull/2778",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-34451"
          ],
          "PublishedDate": "2023-07-03T17:15:00Z",
          "LastModifiedDate": "2023-07-17T18:58:00Z"
        }
      ]
    }
  ]
}
